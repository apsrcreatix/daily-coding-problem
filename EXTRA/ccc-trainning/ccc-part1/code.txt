next greater permutation in C++

#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
#include <string.h>
using namespace std;
void swap(char *a, char *b) {
    char temp = *a;
    *a = *b;
    *b = temp;
}
void findNext(char number[], int n) {
    int i, j;
    for (i = n - 1; i > 0; i--)
        if (number[i] > number[i - 1])
            break;
    if (i == 0) {
        cout << "-1";
        return;
    }
    int x = number[i - 1], smallest = i;
    for (j = i + 1; j < n; j++)
        if (number[j] > x && number[j] < number[smallest])
            smallest = j;
    swap(&number[smallest], &number[i - 1]);
    sort(number + i, number + n);
    cout << number;
}
int main() {
    /* Enter your code here. Read input from STDIN. Print output to STDOUT */
    char digits[] = "50";
    scanf("%s", digits);
    int n = strlen(digits);
    findNext(digits, n);
    return 0;
}
-----------------------------------------

zig zag in C++

#include <bits/stdc++.h>
using namespace std;

void printZigZag(string str, int k)
{
	if (k == 1)
	{
		cout << str;
		return;
	}
	for (int i = 0; i < str.length(); i += (k-1)*2)
		cout << str[i];

	for (int j = 1; j < k - 1; j++)
	{
		bool down = true;
		for (int i = j; i < str.length();)
		{
			cout << str[i];
			if (down)
				i += (k-j-1)*2;
			else
				i += (k-1)*2 - (k-j-1)*2;

			down = !down;
		}
	}
	for (int i = k - 1; i < str.length(); i += (k-1)*2)
		cout << str[i];
}

int main()
{
	string str;
	int k;
    cin>>str>>k;

	printZigZag(str, k);

	return 0;
}
-------------------------------------------
string repetation in C++

#include <cmath>
#include <cstdio>
#include <string.h>
#include <string>
#include <vector>
#include <iostream>
#include <algorithm>
using namespace std;


int main() {
    /* Enter your code here. Read input from STDIN. Print output to STDOUT */
    string str;
    int letters[26] = {0}, min = 10000, len=0;
    cin>>str;
    int lent = str.size();
    len = lent;
    for(int i=1; i<=lent; i++)
    {
        string temp = "";
        string ans = "";
        if(lent%i == 0)
        {
            for(int j=0; j<i; j++)
                ans+=str[j];
            for(int j=0; j<(lent/i); j++)
                temp+=ans;
            if(str==temp)
            {
                cout<<ans;
                return 0;
            }
        }
    }
    return 0;
}
-------------------------------------------
p string

#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {

    /* Enter your code here. Read input from STDIN. Print output to STDOUT */
    char a[1001],c[1001],d[1001];
    int b,i,j,n,fla=0;
    scanf("%d",&n);
    scanf("%s",a);
    b=strlen(a)/2;

    int flag[26]={0};

    for(i=0;i<strlen(a);i++)
    {
        flag[a[i]-97]++;
    }
    if(n==1)
        printf("YES");
    else{

    for(i=0;i<26;i++)
    {
    if(flag[i]!=0 && flag[i]%n!=0)
       fla=1;

    }

    if(fla==0)
        printf("YES");
    else
        printf("NO");
    }
    return 0;
}
--------------------------------
rohan says hello
#include<stdio.h>
int main()
{
 char s[100];
 int i,j,k,l,m;
 scanf("%s",s);
 for(i=0;s[i]!='\0';i++)
 {
  if(s[i]=='h')
  {
   for(j=i+1;s[j]!='\0';j++)
   {
    if(s[j]=='e')
    {
    for(k=j+1;s[k]!='\0';k++)
    {
     if(s[k]=='l')
     {
      for(l=k+1;s[l]!='\0';l++)
      {
       if(s[l]=='l')
       {
        for(m=l+1;s[m]!='\0';m++)
        {
        if(s[m]=='o')
         {
          printf("YES");
          return 0;
         }
        }
       }
      }
     }
    }
    }
   }
  }
 }
 printf("NO");
 return 0;
}
------
strstr in java
import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;
public class Solution {
    private static int strstr(String s1, String s2) {
        if (s1.length() < s2.length()) {
            String s3 = s2;
            s2 = s1;
            s1 = s3;
        }
        int count = 0;
        while (s1.length() > 0) {
            if (s1.contains(s2)) {
                count++;
                s1 = s1.substring(s1.indexOf(s2) + 1);
            } else {
                break;
            }
        }
        return count;
    }
    public static void main(String[] args) {
        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */
        Scanner sc = new Scanner(System.in);
        String s1 = sc.nextLine();
        String s2 = sc.nextLine();
        System.out.println(strstr(s1, s2));
    }
}
---------------------------
#!/bin/python3
import sys
def findallpass(t,s,flag,l):
    if(t == n):
        l.append(s)
        return
    if(flag):
        for i in consonants:
            findallpass(t+1,s+i,False,l)

    else:
        for i in vowels:
            findallpass(t+1,s+i,True,l)


consonants = ['b','c','d','f','g','h','j','k','l','m','n','p','q','r','s','t','v','w','x','z']
vowels = ['a','e','i','o','u']

n = int(input().strip())
l=[]
findallpass(0,"",True,l)
findallpass(0,"",False,l)
l=sorted(l)
for i in l:
    print(i)


goo.gl/Ls2nb2
